#+title: Mongo Crud

* Создание базы
В MongoDB база данных создаётся автоматически при первом обращении к ней (например, при записи данных).
1. Подключитесь к MongoDB
Для начала подключитесь к MongoDB с помощью клиента, например mongosh (MongoDB Shell). Если MongoDB работает локально на стандартном порте 27017, вы попадёте в интерактивный shell.
2. Выберите или создайте базу данных
Чтобы выбрать базу данных, используйте команду =use=. Если база данных не существует, она будет создана автоматически при первой записи данных.
3. Добавьте коллекцию и документ
База данных создаётся автоматически, когда вы добавляете данные.
#+begin_src
// если запускается контейнер
docker run -it -p 28000:27017 --name mongoContainer mongo:latest mongosh
// если контейнер запущен
docker exec -it mongoContainer mongosh
// если без контейнера
mongosh
use myNewDatabase
db.myCollection.insertOne({ name: "John", age: 30 })
#+end_src

4. Проверьте список баз данных
#+begin_src
show dbs
#+end_src
Чтобы проверить, какая база данных выбрана в данный момент, выполните:
#+begin_src
db
#+end_src

* Удаление базы данных
Если вам нужно удалить базу данных, выполните следующие шаги:
#+begin_src
use myNewDatabase
db.dropDatabase()
#+end_src

* Типы данных
1. Null
   {"x" : null}
   Нулевой тип можно использовать для обозначения как нулевого значения, так и несуществующего поля
2. Логический тип
   {"x" : true}
   Существует логический тип данных, который можно использовать для значений true и false
3. Число
   {"x" : 3.14}
   {"x" : 3}
   По умолчанию оболочка использует 64-битные числа с плавающей точкой. Таким образом, в оболочке эти числа выглядят «нормально». В случае с целыми числами используйте классы =NumberInt= или =NumberLong=, которые обозначают 4-байтовые или 8-байтовые целые числа со знаком соответственно.
   {"x" : NumberInt ("3")}
   {"x" : NumberLong ("3")}
4. Строка
   {"x" : "foobar"}
   Любая строка символов в кодировке UTF-8 может быть представлена с использованием типа строки
5. Дата
   {"x" : new Date()}
   MongoDB хранит даты в виде 64-битных целых чисел, обозначающих миллисекунды с момента эпохи Unix (1 января 1970 г.). Часовой
пояс не сохраняется
6. Регулярное выражение
   {"x" : / foobar / i}
   Запросы могут использовать регулярные выражения, используя синтаксис регулярных выражений JavaScript
7. Массив
   {"x" : ["a", "b", "c"]}
   Наборы или списки значений могут быть представлены в виде массивов
8. Встраиваемый документ
   {"x" : {"foo": "bar"}}
   Документы могут содержать целые документы, встроенные в качестве значений в родительский документ
9. Идентификатор объекта
   {"x" : ObjectId ()}
   Идентификатор объекта – это 12-байтовый идентификатор для документов
10. Двоичные данные
    это строка из произвольных байтов. Ими нельзя манипулировать из оболочки. Двоичные данные – единственный способ сохранять строки не в формате UTF-8 в базе данных.
11. Код
    {"x" : function() { /* ... */ }}
    MongoDB также позволяет хранить произвольный код JavaScript в запросах и документах
