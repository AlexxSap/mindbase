#+title: Monfo Setup

* Запуск MongoDB в Docker

#+begin_src
docker run --name my-mongo -d -p 27017:27017 mongo
#+end_src
Пояснение:
- =-name my-mongo=: задаёт имя контейнера (в данном случае my-mongo).
- =-d=: запускает контейнер в фоновом режиме (detached mode).
- =-p 27017:27017=: пробрасывает порт 27017 контейнера на порт 27017 хоста. Это стандартный порт MongoDB.
- =mongo=: указывает образ MongoDB из Docker Hub.

Теперь вы можете подключиться к MongoDB с помощью клиента, например mongosh (MongoDB Shell) или любого другого инструмента.
Пример подключения через mongosh:
#+begin_src
mongosh "mongodb://localhost:27017"
#+end_src

Настройка постоянного хранилища
#+begin_src
docker run --name my-mongo -d -p 27017:27017 -v ~/mongo-data:/data/db mongo
#+end_src
Пояснение:
- =-v ~/mongo-data:/data/db=: монтирует папку ~/mongo-data на вашем компьютере в директорию /data/db внутри контейнера. Это гарантирует, что данные будут сохраняться локально.

Использование аутентификации
Если вы хотите запустить MongoDB с аутентификацией, добавьте переменные окружения
#+begin_src
docker run --name my-mongo -d -p 27017:27017 -e MONGO_INITDB_ROOT_USERNAME=root -e MONGO_INITDB_ROOT_PASSWORD=example mongo
#+end_src
Пояснение:
- =MONGO_INITDB_ROOT_USERNAME=: имя пользователя для root.
- =MONGO_INITDB_ROOT_PASSWORD=: пароль для root.

 Теперь вы можете подключаться к MongoDB с использованием этих данных:
#+begin_src
// если запускается контейнер
docker run -it -p 28000:27017 --name mongoContainer mongo:latest mongosh
// если контейнер запущен
docker exec -it mongoContainer mongosh
// если без уонтейнера
mongosh "mongodb://root:example@localhost:27017"
#+end_src

* Остановка и удаление контейнера

Если вам нужно остановить контейнер:
#+begin_src
docker stop my-mongo
#+end_src

Чтобы снова запустить его:
#+begin_src
docker start my-mongo
#+end_src

Для удаления контейнера:
#+begin_src
docker rm my-mongo
#+end_src

* Обновление MongoDB
Если вы хотите обновить MongoDB до новой версии, удалите старый контейнер и запустите новый с последней версией образа:
#+begin_src
docker pull mongo
docker run --name my-mongo -d -p 27017:27017 mongo
#+end_src

* .mongorc.js
Если вы часто загружаете скрипты, можно поместить их в файл в каталоге данных (или в ~) .mongorc.js (или .mongoshrc.js для mongosh). Этот файл запускается всякий раз, когда вы запускаете оболочку.

Вы можете отключить загрузку своего файла .mongorc.js, используя опцию =--norc= при запуске оболочки.

В нём можно устанавливать глобальные значения или запрещать действия
#+begin_src js
var no = function() {
    print("Not on my watch.");
};
// Предотвращаем удаление баз данных;
db.dropDatabase = DB.prototype.dropDatabase = no;
// Предотвращаем удаление коллекций;
DBCollection.prototype.drop = no;
// Предотвращаем удаление индекса;
DBCollection.prototype.dropIndex = no;
// Предотвращаем удаление индексов;
DBCollection.prototype.dropIndexes = no;
#+end_src

Приглашение оболочки по умолчанию можно переопределить путем установки переменной =prompt= в строку либо в функцию.
#+begin_src js
prompt = function() {
    if (typeof db == 'undefined’) {
        return '(nodb)> ';
    }
    // Проверка последней операции;
    try {
        db.runCommand({getLastError:1});
    }
    catch (e) {
        print(e);
    }
    return db+"> ";
};
#+end_src
