#+title: Флаги Тестов

В Go тестирование является неотъемлемой частью разработки, и язык предоставляет встроенную поддержку для написания и запуска тестов через пакет testing.
Для управления выполнением тестов можно использовать различные флаги командной строки.
Эти флаги позволяют настраивать поведение тестов, такие как выбор конкретных тестов, параллельное выполнение, вывод подробной информации и многое другое.

Вот обзор основных флагов с примерами их использования:
1. =-v= (verbose) — Вывод подробной информации
   Флаг -v позволяет получить подробный вывод о каждом тесте, включая его имя, продолжительность выполнения и результат.
#+begin_src
go test -v ./...
#+end_src

2. =-run= — Выбор конкретных тестов
   Флаг -run позволяет запустить только те тесты, имена которых соответствуют заданному регулярному выражению.
#+begin_src
go test -run TestSum ./...
#+end_src

3. =-count= — Количество повторений тестов
   Флаг -count указывает, сколько раз каждый тест должен быть выполнен. Это полезно для проверки стабильности тестов.
 #+begin_src
go test -count=3 ./...
#+end_src

4. =-bench= — Запуск бенчмарков
   Флаг -bench используется для запуска бенчмарков. Он принимает регулярное выражение для выбора бенчмарков, которые нужно выполнить.
#+begin_src
go test -bench=Sum ./...
#+end_src

5. =-race= — Обнаружение гонок данных
   Флаг -race включает анализ состояния гонки данных (data race). Это полезно для выявления проблем с конкурентностью в многопоточных программах.
#+begin_src
go test -race ./...
#+end_src

6. =-timeout= — Установка таймаута
   Флаг -timeout позволяет установить максимальное время выполнения тестов. Если тесты занимают больше времени, они будут прерваны.
#+begin_src
go test -timeout=1s ./...
#+end_src

7. =-short= — Пропуск длительных тестов
   Флаг -short используется для пропуска тестов, помеченных как длительные (обычно это делается с помощью условия if testing.Short()).
#+begin_src
go test -short ./...
#+end_src

8. =-cover= — Вычисление покрытия кода
   Флаг -cover позволяет измерить покрытие кода тестами.
#+begin_src
go test -cover ./...
#+end_src

9. =-coverprofile= — Генерация отчёта о покрытии
   Флаг -coverprofile создаёт файл с детальным отчётом о покрытии кода, который можно визуализировать с помощью инструментов, таких как go tool cover.
#+begin_src
go test -coverprofile=coverage.out ./...
go tool cover -html=coverage.out
#+end_src

10. =-parallel= — Параллельное выполнение тестов
    Флаг -parallel позволяет указать, сколько тестов может выполняться параллельно. Это ускоряет выполнение тестов, особенно если они поддерживают конкурентность.
#+begin_src
go test -parallel=4 ./...
#+end_src
