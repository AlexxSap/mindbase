#+title: Многоточие В Go

Многоточие (...) в Go — инструмент, который делает язык более гибким и удобным для работы с функциями, принимающими переменное количество аргументов.

- ~Вариативные Функции~
Основное применение многоточия в Go — это определение вариативных функций. Такие функции могут принимать любое количество аргументов. Пример:
#+begin_src go
func example(args ...int) {
    for _, arg := range args {
        fmt.Println(arg)
    }
}
#+end_src
Вызывать эту функцию можно с разным количеством аргументов:
#+begin_src go
example(1, 2, 3)
example(4, 5, 6, 7, 8)
#+end_src

- ~Передача Срезов~
Многоточие позволяет передавать срезы в вариативные функции. Это удобно, когда у вас уже есть срез, и вы хотите передать его элементы в функцию. Пример:
#+begin_src go
slice := []int{1, 2, 3}
example(slice...)
#+end_src

- ~Командная Строка~
В командной строке Go многоточие используется как подстановочный знак, обозначающий "всё в этой директории и всех поддиректориях". Это упрощает выполнение команд для всех файлов в проекте.

- ~Вариативные Интерфейсы~
Многоточие можно использовать с интерфейсами для создания вариативных интерфейсов, что позволяет функциям принимать аргументы различных типов.
Пример:
#+begin_src go
func printAll(args ...interface{}) {
    for _, arg := range args {
        fmt.Println(arg)
    }
}

// Вызов функции:
printAll(1, "string", 3.14)
#+end_src
